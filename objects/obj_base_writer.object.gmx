<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-500</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var n;
SCR_TEXTTYPE(global.typer)
x = round(x)
y = round(y)
writingx = round(writingx)
writingy = round(writingy)
stringno = 0
stringpos = 0
halt = false
dfy = 0
sound_enable = 1
n = 0
while ((global.msg[n] != "%%%"))
{
    mystring[n] = global.msg[n]
    n++
}
originalstring = scr_replace_buttons_pc(mystring[0])
alarm[0] = textspeed
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var advance, dosound, delay, ch, n, sfxtype, sfx, rnsound;
if (stringpos &gt;= string_length(originalstring))
    exit
advance = 1
if (global.typer == 111)
    advance += 1
//if (txtsound == snd_mtt1)
//    advance += 2
else if (txtsound == snd_tem)
    advance += 1
dosound = 0
delay = textspeed
while (stringpos &lt; string_length(originalstring) &amp;&amp; advance &gt; 0)
{
    stringpos++
    ch = string_char_at(originalstring, stringpos)
    if (ch == "^")
    {
        stringpos++
        ch = string_char_at(originalstring, stringpos)
        if (ch != "0")
        {
            n = real(ch)
            delay = (n * 10)
            advance = 1
        }
    }
    else if (ch == "\")
    {
        stringpos++
        ch = string_char_at(originalstring, stringpos)
        if (ch == "S")
        {
            stringpos++
            sfxtype = string_char_at(originalstring, stringpos)
            if (sfxtype == "+")
                sound_enable = 1
            else if (sfxtype == "-")
                sound_enable = 0
            else
            {
                sfx = -4
                if (sfxtype == "p")
                    sfx = snd_phone
                if (sfx != -4)
                    audio_play_sound(sfx,80,false)
            }
        }
        else if (ch == "z")
        {
            stringpos++
            advance--
            if sound_enable
                dosound = 1
        }
        else if (ch == "E" || ch == "F" || ch == "M" || ch == "T" || ch == "*")
            stringpos++
    }
    else if (ch != "/" &amp;&amp; ch != "%" &amp;&amp; ch != "&amp;")
    {
        advance--
        if sound_enable
            dosound = 1
    }
}
alarm[0] = delay
if dosound
{
    if (txtsound == snd_tem)
    {
        audio_stop_sound(snd_tem)
        audio_stop_sound(snd_tem2)
        audio_stop_sound(snd_tem3)
        audio_stop_sound(snd_tem4)
        audio_stop_sound(snd_tem5)
        audio_stop_sound(snd_tem6)
        rnsound = floor(random(6))
        switch rnsound
        {
            case 0:
                audio_play_sound(snd_tem,80,false)
                break
            case 1:
                audio_play_sound(snd_tem2,80,false)
                break
            case 2:
                audio_play_sound(snd_tem3,80,false)
                break
            case 3:
                audio_play_sound(snd_tem4,80,false)
                break
            case 4:
                audio_play_sound(snd_tem5,80,false)
                break
            case 5:
                audio_play_sound(snd_tem6,80,false)
                break
        }

    }
    else
    {
        ch = string_char_at(originalstring, stringpos)
        if (ch != " " &amp;&amp; ch != "ã€€")
        {
            audio_stop_sound(txtsound)
            audio_play_sound(txtsound,80,false)
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((shake &gt; 38))
{
    speed = 2
    direction += 20
}
else if ((shake == 42))
{
    speed = 4
    direction -= 19
}
if ((halt == 3) || (dfy == 1))
    instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((control_check_pressed(0) == 1))
    event_user(0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.inbattle == 0)
{
    if (!instance_exists(obj_choicer))
    {
        choicer = instance_create(0, 0, obj_choicer)
        choicer.creator = id
        if (myfont == fnt_ja_comicsans_big)
        {
            choicer.x0 += 11
            choicer.x += 11
        }
    }
    halt = 5
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((halt == true))
{
    stringno++
    originalstring = scr_replace_buttons_pc(mystring[stringno])
    stringpos = 0
    halt = false
    alarm[0] = textspeed
}
else if ((halt == 2))
{
    control_clear(0)
    instance_destroy()
}
else if ((halt == 4))
{
    global.myfight = 0
    global.mnfight = 1
    control_clear(0)
    instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var halfsize, n, ch, myletter, newtyper, sym, sym_s, icontype, sprite, spritex, spritey, icon_scale, choiceindex, nextch, letterx, offsetx, offsety, halfscale, unit, lastch, angle, display_scale, finalx, finaly;
if vtext
    myx = (writingxend - vspacing)
else
    myx = writingx
myy = writingy
halfsize = 0
n = 1
while (n &lt;= stringpos)
{
    ch = string_char_at(originalstring, n)
    myletter = ""
    if (ch == "^" &amp;&amp; string_char_at(originalstring, (n + 1)) != "0")
    {
        n++
        n++
        continue
    }
    else if (ch == "\")
    {
        n++
        ch = string_char_at(originalstring, n)
        if (ch == "R")
            mycolor = c_red
        else if (ch == "G")
            mycolor = c_lime
        else if (ch == "W")
            mycolor = c_white
        else if (ch == "Y")
            mycolor = c_yellow
        else if (ch == "X")
            mycolor = c_black
        else if (ch == "B")
            mycolor = c_blue
        else if (ch == "O")
            mycolor = c_orange
        else if (ch == "L")
            mycolor = $FDC00E
        else if (ch == "P")
            mycolor = c_fuchsia
        else if (ch == "p")
            mycolor = $D4BBFF
        else if (ch == "C")
            event_user(1)
        else if (ch == "M")
        {
            n++
            ch = string_char_at(originalstring, n)
            global.flag[20] = real(ch)
        }
        else if (ch == "E")
        {
            n++
            ch = string_char_at(originalstring, n)
            global.faceemotion = real(ch)
        }
        else if (ch == "F")
        {
            n++
            ch = string_char_at(originalstring, n)
            global.facechoice = real(ch)
            global.facechange = 1
        }
        else if (ch == "S")
            n++
        else if (ch == "T")
        {
            n++
            newtyper = string_char_at(originalstring, n)
            if (newtyper == "-")
                halfsize = 1
            else if (newtyper == "+")
                halfsize = 0
            else
            {
                if (newtyper == "T")
                    global.typer = 4
                if (newtyper == "t")
                    global.typer = 48
                if (newtyper == "0")
                    global.typer = 5
                if (newtyper == "S")
                    global.typer = 10
                if (newtyper == "F")
                    global.typer = 16
                if (newtyper == "s")
                    global.typer = 17
                if (newtyper == "P")
                    global.typer = 18
                if (newtyper == "M")
                    global.typer = 27
                if (newtyper == "U")
                    global.typer = 37
                if (newtyper == "A")
                    global.typer = 47
                if (newtyper == "a")
                    global.typer = 60
                if (newtyper == "R")
                    global.typer = 76
                SCR_TEXTTYPE(global.typer)
                global.facechange = 1
            }
        }
        else if (ch == "z")
        {
            n++
            sym = real(string_char_at(originalstring, n))
            if (sym == 4)
            {
                sym_s = spr_infinitysign
                draw_sprite_ext(sym_s, 0, (myx + (random(shake) - (shake / 2))), ((myy + 10) + (random(shake) - (shake / 2))), 2, 2, 0, c_white, 1)
            }
        }
        else if (ch == "*")
        {
            n++
            ch = string_char_at(originalstring, n)
            icontype = 0
            sprite = scr_getbuttonsprite(ch, icontype)
            if (sprite != -4)
            {
                spritex = myx
                spritey = myy
                if (shake &gt; 38)
                {
                    if (shake == 39)
                    {
                        direction += 10
                        spritex += hspeed
                        spritey += vspeed
                    }
                    else if (shake == 40)
                    {
                        spritex += hspeed
                        spritey += vspeed
                    }
                    else if (shake == 41)
                    {
                        direction += (10 * n)
                        spritex += hspeed
                        spritey += vspeed
                        direction -= (10 * n)
                    }
                    else if (shake == 42)
                    {
                        direction += (20 * n)
                        spritex += hspeed
                        spritey += vspeed
                        direction -= (20 * n)
                    }
                    else if (shake == 43)
                    {
                        direction += (30 * n)
                        spritex += ((hspeed * 0.7) + 10)
                        spritey += (vspeed * 0.7)
                        direction -= (30 * n)
                    }
                }
                else if (!instance_exists(obj_papdate))
                {
                    spritex += (random(shake) - (shake / 2))
                    spritey += (random(shake) - (shake / 2))
                }
                icon_scale = 1
                if (myfont == fnt_main || myfont == fnt_ja_main)
                    icon_scale = 2
                if (myfont == fnt_main || myfont == fnt_maintext)
                    spritey += (1 * icon_scale)
                if vtext
                {
                    draw_sprite_ext(sprite, 0, (spritex - sprite_get_width(sprite)), spritey, icon_scale, icon_scale, 0, c_white, 1)
                    myy += ((sprite_get_height(sprite) + 1) * icon_scale)
                }
                else
                {
                    draw_sprite_ext(sprite, 0, spritex, spritey, icon_scale, icon_scale, 0, c_white, 1)
                    myx += ((sprite_get_width(sprite) + 1) * icon_scale)
                }
            }
        }
        else if (ch == "&gt;")
        {
            n++
            choiceindex = real(string_char_at(originalstring, n))
            if (choiceindex == 1)
                myx = 196
            else
            {
                myx = 100
                if (myfont == fnt_ja_comicsans_big)
                    myx += 11
            }
            if (view_wview[view_current] == 640)
                myx *= 2
            myx += view_xview[view_current]
        }
        n++
        continue
    }
    else if (ch == "&amp;")
    {
        script_execute(SCR_NEWLINE)
        n++
        continue
    }
    else if (ch == "/")
    {
        halt = true
        nextch = string_char_at(originalstring, (n + 1))
        if (nextch == "%")
            halt = 2
        else if (nextch == "^" &amp;&amp; string_char_at(originalstring, (n + 2)) != "0")
            halt = 4
        else if (nextch == "*")
            halt = 6
        break
    }
    else if (ch == "%")
    {
        if (string_char_at(originalstring, (n + 1)) == "%")
        {
            instance_destroy()
            break
        }
        else
        {
            stringno++
            originalstring = scr_replace_buttons_pc(mystring[stringno])
            stringpos = 0
            myx = writingx
            myy = writingy
            alarm[0] = textspeed
            break
        }
    }
    else
    {
        myletter = string_char_at(originalstring, n)
        if (myletter == "^")
            n++
        if ((!vtext) &amp;&amp; myx &gt; writingxend)
            script_execute(SCR_NEWLINE)
        letterx = myx
        offsetx = 0
        offsety = 0
        halfscale = 1
        if halfsize
        {
            halfscale = 0.5
            if vtext
                offsetx += (vspacing * 0.33)
            else
                offsety += (vspacing * 0.33)
        }
        if (global.language == "en")
        {
            if (global.typer == 18)
            {
                if (myletter == "l" || myletter == "i")
                    letterx += 2
                if (myletter == "I")
                    letterx += 2
                if (myletter == "!")
                    letterx += 2
                if (myletter == ".")
                    letterx += 2
                if (myletter == "S")
                    letterx += 1
                if (myletter == "?")
                    letterx += 2
                if (myletter == "D")
                    letterx += 1
                if (myletter == "A")
                    letterx += 1
                if (myletter == "'")
                    letterx += 1
            }
        }
        else if (global.language == "ja")
        {
            if (vtext &amp;&amp; (myfont == fnt_ja_papyrus || myfont == fnt_ja_papyrus_btl))
            {
                if (myy == writingy &amp;&amp; (myletter == "ã€Œ" || myletter == "ã€Ž"))
                    myy -= round((((string_width(myletter) / 2) * htextscale) * halfscale))
            }
            else if (myfont == fnt_ja_maintext || myfont == fnt_ja_main)
            {
                unit = (htextscale * halfscale)
                if (myfont == fnt_ja_main)
                    unit *= 2
                if (ord(myletter) &lt; 1024 || ord(myletter) == 8211)
                {
                    if (n &gt; 1)
                    {
                        lastch = ord(string_char_at(originalstring, (n - 1)))
                        if (lastch &gt;= 1024 &amp;&amp; lastch &lt; 65281 &amp;&amp; lastch != 8211 &amp;&amp; lastch != 12288)
                            letterx += unit
                    }
                }
            }
        }
        scr_setfont(myfont)
        draw_set_color(mycolor)
        if vtext
            angle = -90
        else
            angle = 0
        if (shake &gt; 38)
        {
            if (shake == 39)
            {
                direction += 10
                offsetx += hspeed
                offsety += vspeed
            }
            else if (shake == 40)
            {
                offsetx += hspeed
                offsety += vspeed
            }
            else if (shake == 41)
            {
                direction += (10 * n)
                offsetx += hspeed
                offsety += vspeed
                direction -= (10 * n)
            }
            else if (shake == 42)
            {
                direction += (20 * n)
                offsetx += hspeed
                offsety += vspeed
                direction -= (20 * n)
            }
            else if (shake == 43)
            {
                direction += (30 * n)
                offsetx += ((hspeed * 0.7) + 10)
                offsety += (vspeed * 0.7)
                direction -= (30 * n)
            }
        }
        else
        {
            offsetx += (random(shake) - (shake / 2))
            offsety += (random(shake) - (shake / 2))
        }
        display_scale = (surface_get_width(application_surface) / view_wview[view_current])
        finalx = (round(((letterx + offsetx) * display_scale)) / display_scale)
        finaly = (round(((myy + offsety) * display_scale)) / display_scale)
        draw_text_transformed(finalx, finaly, myletter, (htextscale * halfscale), (vtextscale * halfscale), angle)
        letterx += spacing
        if (global.language == "en")
        {
            if (myfont == fnt_comicsans)
            {
                if (myletter == "w")
                    letterx += 2
                if (myletter == "m")
                    letterx += 2
                if (myletter == "i")
                    letterx -= 2
                if (myletter == "l")
                    letterx -= 2
                if (myletter == "s")
                    letterx -= 1
                if (myletter == "j")
                    letterx -= 1
            }
        }
        else if (global.language == "ja")
        {
            if vtext
                myy += round(((string_width(myletter) * htextscale) * halfscale))
            else if (myletter == " " || ord(myletter) &gt;= 65377)
                letterx -= floor((spacing / 2))
            else if (ord(myletter) &lt; 1024 || ord(myletter) == 8211)
            {
                if (myfont == fnt_ja_comicsans || myfont == fnt_ja_comicsans_big)
                    letterx -= floor((spacing * 0.3))
                else
                    letterx -= floor((spacing * 0.4))
            }
        }
        if (!vtext)
        {
            if halfsize
                myx = round((myx + ((letterx - myx) / 2)))
            else
                myx = letterx
        }
        n++
        continue
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
