<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>50</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(snd_vaporized,80,false)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()
w = (sprite_get_width(sprite_index) * image_xscale)
h = (sprite_get_height(sprite_index) * image_yscale)
xoff = (sprite_get_xoffset(sprite_index) * image_xscale)
yoff = (sprite_get_yoffset(sprite_index) * image_yscale)
x -= xoff
y -= yoff
surf = surface_create(w, h)
pixel = 0
a = 0
r = 0
g = 0
b = 0
col = c_black
delay = 0
surface_set_target(surf)
draw_clear_alpha(c_black, 0)
draw_sprite(sprite_index, image_index, xoff, yoff)
surface_reset_target()
buff = buffer_create(((4 * w) * h), buffer_fixed, 1)
buffer_get_surface(buff, surf, 0, 0, 0)
surface_free(surf)
blarg = 0
if ((image_xscale == 2))
    blarg = 1
else
    blarg = 2
for (j = 0; j &lt; h; j += blarg)
{
    for (i = 0; i &lt; w; i += blarg)
    {
        pixel = buffer_peek(buff, (4 * (i + (j * w))), buffer_u32)
        a = ((pixel &gt;&gt; 24) &amp; 255)
        r = (pixel &amp; 255)
        g = ((pixel &gt;&gt; 8) &amp; 255)
        b = ((pixel &gt;&gt; 16) &amp; 255)
        obj = noone
        if ((a == 255))
        {
            obj = obj_whtpxlgrav
            col = make_colour_rgb(b, g, r)
        }
        if ((obj != noone))
        {
            _obj = instance_create((x + (i * image_xscale)), (y + (j * image_yscale)), obj)
            with (_obj)
            {
                image_blend = other.col
                delay = floor((other.delay / 3))
            }
        }
    }
    delay += 1
}
buffer_delete(buff)
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
