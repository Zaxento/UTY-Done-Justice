<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_hotland_leftedge</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>700000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>siner = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>siner += 1
if (image_xscale &gt;= 0)
{
    for (i = 0; i &lt; image_xscale; i += 1)
    {
        if (i == 0)
            draw_sprite(spr_hotland_leftedge, (siner / 2), x, y)
        else if (i == (image_xscale - 1))
            draw_sprite(spr_hotland_rightedge, (siner / 2), (x + i * 20), y)
        else
            draw_sprite(spr_hotland_bottomedge, (siner / 2), (x + i * 20), y)
    }
    draw_set_color(c_black)
    if (room == room_fire_walkandbranch2)
        draw_sprite_ext(spr_singleblackpixel, 0, x, (y + 19), (20 * image_xscale), 1, 0, c_white, 1)
}
else
{
    draw_sprite(spr_hotland_rightedge, (siner / 2), (x - 20), y)
    for (i = 1; i &lt; (-image_xscale); i += 1)
        draw_sprite(spr_hotland_bottomedge, (siner / 2), (x - i * 20 - 20), y)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
