<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//This baby's been locked onto an EXPANSION PAK.
var i, Won, CP, CH, BW, BP, BH, EndF;
if global.to_joyconfig
{
    global.to_joyconfig = 0
    instance_create(0, 0, obj_joypadmenu)
    instance_destroy()
    exit
}
num_borders = 10
border_enabled[0] = 1
border_enabled[1] = 1
border_enabled[2] = 1
border_enabled[3] = 1
for (i = 4; i &lt;= num_borders; i++)
    border_enabled[i] = 0
fun = false
if ossafe_file_exists("undertale" + ".ini")
{
    ossafe_ini_open("undertale" + ".ini")
    if ossafe_file_exists("file" + string(global.filechoice))
    {
        fun = true
        Won = ini_read_real("General", "Won", 0)
        CP = ini_read_real("General", "CP", 0)
        CH = ini_read_real("General", "CH", 0)
        BW = ini_read_real("General", "BW", 0)
        BP = ini_read_real("General", "BP", 0)
        BH = ini_read_real("General", "BH", 0)
        EndF = ini_read_real("EndF", "EndF", 0)
        if (Won || BW || CP || BP)
        {
            for (i = 4; i &lt;= 8; i++)
                border_enabled[i] = 1
        }
        if (CP || BP)
            border_enabled[9] = 1
        if (CH || BH)
            border_enabled[10] = 1
        if (EndF &gt;= 2)
            fun = false
    }
    ossafe_ini_close()
}
menu = 0
menu_engage = 0
buffer = 5
button_list[0] = 32769
button_list[1] = 32770
button_list[2] = 32771
button_list[3] = 32772
button_list[4] = 32773
button_list[5] = 32775
button_list[6] = 32774
button_list[7] = 32776
button_list[8] = 32779
button_list[9] = 32780
button_list[10] = 32777
button_list[11] = 32778
button_list[12] = -4
r_line = scr_gettext("joyconfig_resetted") // RESETTED...
o_o = 0
siner = 0
r_buffer = 0
intro = 0
weather = 0
rectile = 0
extreme = 0
extreme2 = 0
harp = 0
weathermusic = 0
if (fun == true)
{
    intro = 1
    menu_engage = -1
    weather = 1
    month = current_month
    if (month == 12 || month == 1 || month == 2)
        weather = 1
    if (month == 3 || month == 4 || month == 5)
        weather = 2
    if (month == 6 || month == 7 || month == 8)
        weather = 3
    if (month == 9 || month == 10 || month == 11)
        weather = 4
}
finish = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if finish
{
    ossafe_ini_open("config.ini")
    ini_write_string("General", "lang", global.language)
    ini_write_real("General", "sb", global.screen_border_id)
    ini_write_real("joypad1", "b0", global.button0)
    ini_write_real("joypad1", "b1", global.button1)
    ini_write_real("joypad1", "b2", global.button2)
    ossafe_ini_close()
    ossafe_savedata_save()
    audio_stop_all()
    room_goto(room_intromenu)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (fun == true)
{
    if (harp != abc_123_a)
        audio_stop_sound(harp)
    if (weathermusic != abc_123_a)
        audio_stop_sound(weathermusic)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var menu_max, vspacing, button_x, i, itext, xx, button, b, command, sprite, border_label, border_sel;
//May not be completely friendly to other operating systems or a gamepad. I don't have a way to test them, so forgive me if some mistakes are made.
buffer -= 1
if (fun == true &amp;&amp; harp == abc_123_a)
{
    harp = mus_harpnoise
    if (weather == 1)
        weathermusic = mus_options_winter
    if (weather == 2 || weather == 4)
        weathermusic = mus_options_fall
    if (weather == 3)
        weathermusic = mus_options_summer
}
if (weather == 1) //&amp;&amp; global.SCENARIO != "YELLOW"
{
    c = instance_create(0, 0, obj_ct_fallobj)
    c.sprite_index = spr_christmasflake
    siner += 1
    draw_sprite_ext(spr_tobdog_winter, 0, 250, 218, 1, 1, 0, c_white, 1)
    draw_set_color(c_gray)
    draw_text_transformed((220 + sin((siner / 12))), (120 + cos((siner / 12))), scr_gettext("joyconfig_fun_winter"), 1, 1, -20) // cold outside#but stay warm#inside of you
}
if (weather == 2) //&amp;&amp; global.SCENARIO != "YELLOW"
{
    c = instance_create(0, 0, obj_ct_fallobj)
    c.sprite_index = spr_fallleaf
    c.image_blend = choose(merge_color(c_red, c_white, 0.5))
    siner += 1
    draw_sprite_ext(spr_tobdog_spring, floor((siner / 15)), 250, 218, 1, 1, 0, c_white, 1)
    draw_set_color(c_gray)
    draw_text_transformed((220 + sin((siner / 12))), (120 + cos((siner / 12))), scr_gettext("joyconfig_fun_spring"), 1, 1, -20) // spring time#back to school
}
if (weather == 3) //&amp;&amp; global.SCENARIO != "YELLOW"
{
    extreme2 += 1
    if (extreme2 &gt;= 240)
    {
        extreme += 1
        if (extreme &gt;= 1100 &amp;&amp; abs(sin((siner / 15))) &lt; 0.1)
        {
            extreme = 0
            extreme2 = 0
        }
    }
    siner += 1
    draw_sprite_ext(spr_tobdog_summer, floor((siner / 15)), 250, 225, (2 + (sin((siner / 15)) * (0.2 + (extreme / 900)))), (2 - (sin((siner / 15)) * (0.2 + (extreme / 900)))), 0, c_white, 1)
    draw_set_color(c_yellow)
    draw_circle((258 + (cos((siner / 18)) * 6)), (40 + (sin((siner / 18)) * 6)), (28 + (sin((siner / 6)) * 4)), 0)
    draw_set_color(c_gray)
    draw_text_transformed((220 + sin((siner / 12))), (120 + cos((siner / 12))), scr_gettext("joyconfig_fun_summer"), 1, 1, -20) // try to withstand#the sun's life-#giving rays
}
if (weather == 4) //&amp;&amp; global.SCENARIO != "YELLOW"
{
    c = instance_create(0, 0, obj_ct_fallobj)
    c.sprite_index = spr_fallleaf
    c.image_blend = choose(65535, 4235519, 255)
    siner += 1
    draw_sprite_ext(spr_tobdog_autumn, 0, 250, 218, 1, 1, 0, c_white, 1)
    draw_set_color(c_gray)
    draw_text_transformed((220 + sin((siner / 12))), (120 + cos((siner / 12))), scr_gettext("joyconfig_fun_fall"), 1, 1, -20) // sweep a leaf#sweep away a#troubles
}
menu_max = 6
if (global.osflavor &lt;= 2)
{
    menu_max = 2
    if (obj_time.j_ch == 0)
        menu_max = 1
}
if (menu_engage == 0)
{
    if keyboard_check_pressed(vk_down) //Moves down the selection
        menu += 1
    if keyboard_check_pressed(vk_up) //Moves up the selection
        menu -= 1
    if (menu &lt;= 0)
        menu = 0
    if (menu &gt;= menu_max)
        menu = menu_max
    if (buffer &lt; 0 &amp;&amp; control_check_pressed(0))
    {
        if (!((global.osflavor &gt;= 4 &amp;&amp; menu &gt;= 2 &amp;&amp; menu &lt;= 4)))
        {
            menu_engage = 1
            js_buffer = 1
            buffer = 4
        }
    }
    if (menu == 0) //Changes Settings Pages.
    {
        if keyboard_check_pressed(vk_left) || keyboard_check_pressed(vk_right)
        {
            P2 = instance_create(0, 0, obj_settingsmenu_donejustice)
            P2.menu_engage = 0
            P2.buffer = buffer
            P2.intro = intro
            P2.rectile = rectile
            P2.buffer = buffer
            P2.weather = weather
            P2.extreme = extreme
            P2.extreme2 = extreme2
            P2.harp = harp
            P2.weathermusic = weathermusic
            instance_destroy()
        }
    }
    if (menu == 1) //If you want to add an additional language toggle, put it around here.
    {
        if ((global.osflavor &lt;= 2 &amp;&amp; menu_engage == 1) || keyboard_check_pressed(vk_left) || keyboard_check_pressed(vk_right))
        {
            if (global.language == "en")
                global.language = "ja"
            else
                global.language = "en"
        }
        menu_engage = 0
    }
    if (menu == 6)
    {
        if ((global.osflavor &lt;= 2 &amp;&amp; menu_engage == 1) || keyboard_check_pressed(vk_right))
        {
            do
            {
                global.screen_border_id++
                if (global.screen_border_id &gt; num_borders)
                    global.screen_border_id = 0
            } until (global.screen_border_id &lt; 0 || border_enabled[global.screen_border_id]);
            global.screen_border_state = 0
            global.screen_border_dynamic_fade_id = 0
            global.screen_border_dynamic_fade_level = 0
            scr_enable_screen_border(true)
        }
        else if keyboard_check_pressed(vk_left)
        {
            do
            {
                global.screen_border_id--
                if (global.screen_border_id &lt; 0)
                    global.screen_border_id = num_borders
            } until (global.screen_border_id &lt; 0 || border_enabled[global.screen_border_id]);
            global.screen_border_state = 0
            global.screen_border_dynamic_fade_id = 0
            global.screen_border_dynamic_fade_level = 0
            scr_enable_screen_border(true)
        }
        menu_engage = 0
    }
}
if (menu == 0 &amp;&amp; menu_engage == 1)
    finish = 1
draw_set_color(c_white)
scr_setfont(fnt_maintext)
scr_drawtext_centered_scaled(160, 10, scr_gettext("settings_title"), 2, 2) // SETTINGS
if (menu != 0)
    draw_set_color(c_white)
else
    draw_set_color(c_yellow)
draw_text(20, 40, scr_gettext("joyconfig_exit")) // EXIT

//JAUNDICE SETTINGS
draw_text(60, 40, scr_gettext("settings_page1")) // &lt; PAGE 1 &gt;

if (menu != 1)
    draw_set_color(c_white)
else
    draw_set_color(c_yellow)
draw_text(20, 70, scr_gettext("settings_language")) // LANGUAGE
draw_text(92, 70, scr_gettext(("settings_language_" + global.language)))

//DONE JUSTICE MENU STUFF UHHHHH IDK

//draw_text(20, 100, scr_gettext("settings_button")) // DONE JUSTICE

if (global.osflavor &gt;= 4)
{
    draw_set_color(c_white)
    draw_text(20, 100, scr_gettext("settings_button")) // BUTTON CONFIG
    vspacing = 18
    button_x = 0
    for (i = 0; i &lt; 3; i++)
    {
        if (menu == (i + 2))
            draw_set_color(c_yellow)
        else
            draw_set_color(c_white)
        if (i == 0)
            itext = scr_gettext("settings_button_confirm") // CONFIRM
        else if (i == 1)
            itext = scr_gettext("settings_button_cancel") // CANCEL
        else
            itext = scr_gettext("settings_button_menu") // MENU
        draw_text(40, (100 + ((i + 1) * vspacing)), itext)
        draw_set_color(c_white)
        xx = (40 + string_width(itext))
        if (xx &gt; button_x)
            button_x = xx
    }
    button_x += 15
    for (i = 0; i &lt; 3; i++)
    {
        if (menu == (i + 2) &amp;&amp; buffer &lt; 0)
        {
            button = -4
            b = 0
            while (button_list[b] != -4)
            {
                if gamepad_button_check(0, button_list[b])
                {
                    button = button_list[b]
                    break
                }
                else
                {
                    b++
                    continue
                }
            }
            if (button != -4)
            {
                if (menu == 2)
                {
                    if (global.button1 == button)
                        global.button1 = global.button0
                    if (global.button2 == button)
                        global.button2 = global.button0
                    global.button0 = button
                }
                else if (menu == 3)
                {
                    if (global.button0 == button)
                        global.button0 = global.button1
                    if (global.button2 == button)
                        global.button2 = global.button1
                    global.button1 = button
                }
                else
                {
                    if (global.button0 == button)
                        global.button0 = global.button2
                    if (global.button1 == button)
                        global.button1 = global.button2
                    global.button2 = button
                }
                buffer = 4
            }
        }
        command = string_char_at("ZXC", (i + 1))
        sprite = scr_getbuttonsprite(command, 0)
        if (sprite != -4)
            draw_sprite(sprite, 0, button_x, (100 + ((i + 1) * vspacing)))
    }
    if (r_buffer &gt; 0)
    {
        r_buffer -= 1
        draw_set_color(c_red)
        draw_text_transformed_color(20, ((100 + (3 * vspacing)) + 25), r_line, 1, 1, 0, c_red, c_red, c_red, c_red, (1 - ((10 - r_buffer) / 10)))
    }
    else
    {
        if (menu != 5)
            draw_set_color(c_white)
        else
            draw_set_color(c_yellow)
        draw_text(20, ((100 + (3 * vspacing)) + 25), scr_gettext("joyconfig_reset")) // RESET TO DEFAULT
    }
    if (menu == 5 &amp;&amp; menu_engage == 1)
    {
        r_buffer = 15
        rrr = floor(random(50))
        if (fun == true)
        {
            if (rrr == 1)
                r_line = scr_gettext("joyconfig_spaghetted") // SPAGHETTI...
            else
                r_line = scr_gettext("joyconfig_resetted") // RESETTED...
        }
        global.button0 = global.default_button0
        global.button1 = global.default_button1
        global.button2 = global.default_button2
        global.analog_sense = global.default_analog_sense
        global.analog_sense_sense = global.default_analog_sense_sense
        global.joy_dir = global.default_joy_dir
        menu_engage = 0
    }
    if (menu != 6)
        draw_set_color(c_white)
    else
        draw_set_color(c_yellow)
    border_label = scr_gettext("settings_border") // BORDER
    draw_text(20, ((100 + (3 * vspacing)) + 50), border_label)
    if (global.screen_border_id == 0)
        border_sel = scr_gettext("settings_border_none") // NONE
    else if (global.screen_border_id == -1)
        border_sel = "@!%&amp;"
    else
        border_sel = scr_gettext(("settings_border_" + string(global.screen_border_id)))
    draw_text(((20 + string_width(border_label)) + 20), ((100 + (3 * vspacing)) + 50), border_sel)
}
else if (obj_time.j_ch &gt; 0)
{
    if (menu != 2)
        draw_set_color(c_white)
    else
        draw_set_color(c_yellow)
    draw_text(20, 100, scr_gettext("settings_joyconfig")) // Joystick Config
}
if (intro == 1)
{
    if (rectile == 16)
        caster_play(harp, 1, 1)
    rectile += 4
    draw_set_color(c_black)
    ossafe_fill_rectangle((168 - rectile), -10, -1, 250)
    draw_set_color(c_black)
    ossafe_fill_rectangle((152 + rectile), -10, 330, 250)
    if (rectile &gt;= 170)
    {
        caster_loop(weathermusic, 0.8, 1)
        menu_engage = 0
        buffer = 5
        intro = -1
    }
}
if (global.osflavor &lt;= 2 &amp;&amp; menu == 2 &amp;&amp; menu_engage == 1)
{
    jc = instance_create(0, 0, obj_joypadmenu)
    jc.menu_engage = 0
    jc.buffer = buffer
    jc.intro = intro
    jc.rectile = rectile
    jc.buffer = buffer
    jc.weather = weather
    jc.extreme = extreme
    jc.extreme2 = extreme2
    jc.harp = harp
    jc.weathermusic = weathermusic
    instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>jc = instance_create(0, 0, obj_joypadmenu)
jc.menu_engage = 0
jc.buffer = buffer
jc.intro = intro
jc.rectile = rectile
jc.buffer = buffer
jc.weather = weather
jc.extreme = extreme
jc.extreme2 = extreme2
jc.harp = harp
jc.weathermusic = weathermusic
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>weather = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="52">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>weather = 4
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="51">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>weather = 3
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>weather = 2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="49">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>weather = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
